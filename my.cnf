# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html
# https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size
# https://www.percona.com/blog/2016/07/26/testing-samsung-storage-in-tpcc-mysql-benchmark-percona-server/

[mysqld]

## commonly set 
#remove this line if you want the redo log files are in the same location with data
 innodb_log_group_home_dir=/mnt/pmem01

 basedir = /usr/local/mysql
 #datadir = /usr/local/mysql/data 
 datadir = /mnt/ssd1/data 
 lc-messages-dir = /usr/local/mysql/share #this setting will avoid the error "[ERROR] Can't find error-message file '/usr/share/mysql/srrmsg.sys'".
# bind-address = 115.145.173.195
 port = 3306 
 ssl=0
 #ssl-ca=ca.pem
 #ssl-cert=server-cert.pem
 #ssl-key=server-key.pem
# server_id = .....
# socket = .....

## Query Cache Configuration
# query_cache_limit = 1M
# query_cache_type = 0
# query_cache_size = 16M
 sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES 

##general
 thread_cache_size=2000
 table_open_cache = 200000
 table_open_cache_instances=64
 back_log=1500
 query_cache_type=0
 max_connections=4000
 skip-name-resolve #to solve the warning "IP address '115.145.173.195' could not be resolved: Name or service not known"
##files
#Store data and indexes in per-table file instead of ibdata1.
#Do not have performance improvement, don't use if you have 10k+ tables
 #ON as default
 innodb_file_per_table
 #REDO log, for write intensive and MySQL >= 5.6, you can set this value as 4GB
 #Note: innodb_log_file_size * innodb_log_files_in_group <= NVDIMM_size
 innodb_log_file_size=4G
 innodb_log_files_in_group=2
 innodb_open_files=4000
 innodb_io_capacity=10000
 loose-innodb_io_capacity_max=12000
 #innodb_lru_scan_depth=1024
 innodb_lru_scan_depth=1024
#this value should <= innodb_buffer_pool_instances, default: 4
 innodb_page_cleaners=8

##buffers
 innodb_buffer_pool_size= 5G
 #In MySQL 5.7, default value is 8 or 1 if the innodb_buffer_pool_size < 1GB
 innodb_buffer_pool_instances=8
 # In MySQL 5.7: 128M ~ 2GB, does not need to be larger than buffer pool size
 innodb_log_buffer_size=64M
## tune
 innodb_doublewrite= 1
 innodb_thread_concurrency=0
 innodb_flush_log_at_trx_commit= 1
 innodb_flush_method=O_DIRECT_NO_FSYNC
 innodb_max_dirty_pages_pct=90
 join_buffer_size=32K
 sort_buffer_size=32K
 innodb_use_native_aio=1
 innodb_stats_persistent = 1
## perf special
 innodb_adaptive_flushing = 1
 innodb_flush_neighbors = 0 #HDD:1, non-rotate dev: 0
 innodb_read_io_threads = 16
 innodb_write_io_threads = 8
 innodb_purge_threads=4
 innodb_adaptive_hash_index=0
 innodb_change_buffering=none


## InnoDB performance tunning 

# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
# innodb_buffer_pool_size = 5G 

#In MySQL 5.7, default value is 8 or 1 if the innodb_buffer_pool_size < 1GB
# innodb_buffer_pool_instances = 1

# if the number of pages read sequentialy >= this threshold => trigger read-ahead asynchronous operation
# 0 - 64, default is 56
# innodb_read_ahead_threshold=56

# innodb_random_read_ahead = OFF

#REDO log, for write intensive and MySQL >= 5.6, you can set this value as 4GB
# innodb_log_file_size = 4G
# In MySQL 5.7: 128M ~ 2GB, does not need to be larger than buffer pool size
# innodb_log_buffer_size = 4M

#Effect the performance due to fsync() calls. You on the master (primary). Don't use in the slow-disk system
#Default: 1
# innodb_flush_log_at_trx_commit = 1

#control how data and logs are flushed to diskA
#Values: NULL (default), fsync, O_DSYNC, littlesync, nosync, O_DIRECT, O_DIRECT_NO_FSYNC
# innodb_flush_method

# innodb_use_native_aio = ON

# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin

###########################################################
## Concurrency Controlling 
###########################################################
#Number of threads concurrency run 
# 0(default) ~ 1000; If set to 0, it assump infinite concurrency (no concurrency checking)
#innodb_thread_concurrency=0

# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M 

